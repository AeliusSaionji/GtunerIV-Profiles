/** TODO: 3DR Deadzones **/

#pragma METAINFO("Xbox 360 Controller", 1, 0, "Buffy")

#include <xb1.gph>

#define DEADZONE_L 30.0
#define DEADZONE_R 10.0

main {
    // Deadzone on left stick & right stick - leave final param as 0.0 unless you want a square deadzone
    analog_deadzone(XB1_LX, DEADZONE_L, 0.0);
    analog_deadzone(XB1_RX, DEADZONE_R, 0.0); 
    
    // Stick sensitivity - middle param is midpoint for the stick, final param is sensitivtiy (default 1.0)
    sensitivity(XB1_LX, 0.0, 1.0);
    sensitivity(XB1_LY, 0.0, 1.0);
    
    sensitivity(XB1_RX, 0.0, 1.0);
    sensitivity(XB1_RY, 0.0, 1.0);
}

// taken from T1 header
void sensitivity(int id, fix32 mid, fix32 sen) {
    fix32 val = get_val(id);
    if((int)mid) {
        fix32 val_s = (val >= 0.0) ? 1.0 : -1.0;
        val *= val_s;
        if(val <= mid) val = (val * 50.0) / mid;
        else val = ((50.0 * (val - mid)) / (100.0 - mid)) + 50.0;
        val *= val_s;
    }
 
    val = (val * sen);
 
    set_val(id, clamp(val, -100.0, 100.0));
    return;
}

void analog_deadzone(int id, fix32 deadzone, fix32 ydeadzone) {
    if((int)ydeadzone) {
        set_val(id, abs(get_actual(id)) < deadzone ? 0.0 : get_actual(id));
        set_val(id+1, abs(get_actual(id+1)) < ydeadzone ? 0.0 : get_actual(id+1));
    }
    else if(sqrt(sq(get_actual(id)) + sq(get_actual(id+1))) < deadzone) {
        set_val(id, 0);
        set_val(id+1, 0);
    }
}