#pragma once

/**
  * Function to make DPad sticky when pressed as a chord with another button
  * Parameters: gpc designator BUTTON_ for chord,
   * and a true/false expressed as an int for each direction that should stick
**/

uint8 lock;

void StickyDPad(uint8 chord, uint8 up, uint8 down, uint8 left, uint8 right) {
  //'A' or 'B' unholds any DPad
  if (event_active(BUTTON_15) || event_active(BUTTON_16))
      lock = 0;

  //chord + DPad holds DPad
  if (get_val(chord)) {
    if(!lock) { lock =                       //while lock == false
      ((get_val(BUTTON_10)?1:0) * 1 * up)   ^  //lock = bool * (offset) * bool
      ((get_val(BUTTON_11)?1:0) * 2 * down) ^
      ((get_val(BUTTON_12)?1:0) * 3 * left) ^
      ((get_val(BUTTON_13)?1:0) * 4 * right);
    }
  }

  //Keep DPad held down.
    //BUTTON_9's index value is 8. The DPad thus exists in the
    //index as 9, 10, 11, and 12. These correspond to buttons:
    //10 (up), 11 (down), 12 (left), and 13 (right).
    //lock is either 0 and the if statement fails,
    //or at least 1 and at most 4.
    //ex: BUTTON_9+4 == 8+4 == index 12 == BUTTON_13 == DPad right
  if (lock) set_val(BUTTON_9+lock, 100);
}
